CREATE OR REPLACE PROCEDURE DS.FILL_ACCOUNT_TURNOVER_F(I_ONDATE DATE)
LANGUAGE PLPGSQL
AS $$
DECLARE 
    START_TIME TIMESTAMP;
    END_TIME TIMESTAMP;
BEGIN
    -- УДАЛЯЕМ СУЩЕСТВУЮЩИЕ ДАННЫЕ ДЛЯ УКАЗАННОЙ ДАТЫ
    DELETE FROM DM.DM_ACCOUNT_TURNOVER_F
    WHERE ON_DATE = I_ONDATE;

    -- ВРЕМЯ НАЧАЛА ВСТАВКИ
    START_TIME := CLOCK_TIMESTAMP();

    -- ВСТАВЛЯЕМ НОВЫЕ ДАННЫЕ
    INSERT INTO DM.DM_ACCOUNT_TURNOVER_F (ON_DATE, 
        ACCOUNT_RK, 
        CREDIT_AMOUNT, 
        CREDIT_AMOUNT_RUB, 
        DEBET_AMOUNT, 
        DEBET_AMOUNT_RUB)
    WITH ACCOUNT_SUMS AS (
        SELECT
            P.OPER_DATE,
            P.CREDIT_ACCOUNT_RK AS ACCOUNT_RK,
            P.CREDIT_AMOUNT AS CREDIT_AMOUNT,
            P.CREDIT_AMOUNT * COALESCE(EX.REDUCED_COURCE, 1) AS CREDIT_AMOUNT_RUB,
            0 AS DEBET_AMOUNT,
            0 AS DEBET_AMOUNT_RUB
        FROM
            DS.FT_POSTING_F P
        LEFT JOIN DS.FT_BALANCE_F B ON B.ACCOUNT_RK = P.CREDIT_ACCOUNT_RK
        LEFT JOIN DS.MD_EXCHANGE_RATE_D EX ON B.CURRENCY_RK = EX.CURRENCY_RK
            AND P.OPER_DATE BETWEEN EX.DATA_ACTUAL_DATE AND EX.DATA_ACTUAL_END_DATE
        WHERE
            P.OPER_DATE = I_ONDATE

        UNION ALL

        SELECT
            P.OPER_DATE,
            P.DEBET_ACCOUNT_RK AS ACCOUNT_RK,
            0 AS CREDIT_AMOUNT,
            0 AS CREDIT_AMOUNT_RUB,
            P.DEBET_AMOUNT AS DEBET_AMOUNT,
            P.DEBET_AMOUNT * COALESCE(EX.REDUCED_COURCE, 1) AS DEBET_AMOUNT_RUB
        FROM
            DS.FT_POSTING_F P
        LEFT JOIN DS.FT_BALANCE_F B ON B.ACCOUNT_RK = P.DEBET_ACCOUNT_RK
        LEFT JOIN DS.MD_EXCHANGE_RATE_D EX ON B.CURRENCY_RK = EX.CURRENCY_RK
            AND P.OPER_DATE BETWEEN EX.DATA_ACTUAL_DATE AND EX.DATA_ACTUAL_END_DATE
        WHERE
            P.OPER_DATE = I_ONDATE
    )
    SELECT
        OPER_DATE,
        ACCOUNT_RK,
        SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT,
        SUM(CREDIT_AMOUNT_RUB) AS CREDIT_AMOUNT_RUB,
        SUM(DEBET_AMOUNT) AS DEBET_AMOUNT,
        SUM(DEBET_AMOUNT_RUB) AS DEBET_AMOUNT_RUB
    FROM
        ACCOUNT_SUMS
    GROUP BY
        ACCOUNT_RK, OPER_DATE;

    -- ВРЕМЯ КОНЦА ВСТАВКИ
    END_TIME := CLOCK_TIMESTAMP();

    -- ЗАПИСЬ ЛОГА
    INSERT INTO LOGS.ACCOUNT_TURNOVER (DM_NAME,
        OPER_DATE,
        START_TIME,
        END_TIME )
    VALUES ('DM_ACCOUNT_TURNOVER_F', i_OnDate, START_TIME, END_TIME);

END $$;

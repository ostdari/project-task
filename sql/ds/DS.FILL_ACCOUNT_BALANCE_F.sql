CREATE OR REPLACE PROCEDURE DS.FILL_ACCOUNT_BALANCE_F (I_ONDATE DATE) 
LANGUAGE PLPGSQL 
AS $$
DECLARE
    PREV_DATE DATE = I_ONDATE - INTERVAL '1 DAY';
    START_TIME TIMESTAMP;
    END_TIME TIMESTAMP;
BEGIN
    -- ОЧИСТКА ДАННЫХ ЗА УКАЗАННУЮ ДАТУ ПЕРЕД ЗАПОЛНЕНИЕМ
    DELETE FROM DM.DM_ACCOUNT_BALANCE_F WHERE ON_DATE = I_ONDATE;

    -- ВРЕМЯ НАЧАЛА ВСТАВКИ
    START_TIME := CLOCK_TIMESTAMP();

    -- ЗАПОЛНЕНИЕ ОСТАТКОВ ПО ЛИЦЕВЫМ СЧЕТАМ
    INSERT INTO DM.DM_ACCOUNT_BALANCE_F (ON_DATE, ACCOUNT_RK, BALANCE_OUT, BALANCE_OUT_RUB)
    SELECT
        I_ONDATE AS ON_DATE,
        MD.ACCOUNT_RK,
        CASE
            WHEN MD.CHAR_TYPE = 'А' 
				THEN COALESCE(ABF.BALANCE_OUT, 0) + COALESCE(ATF.DEBET_AMOUNT, 0) - COALESCE(ATF.CREDIT_AMOUNT, 0)
            WHEN MD.CHAR_TYPE = 'П' 
				THEN COALESCE(ABF.BALANCE_OUT, 0) - COALESCE(ATF.DEBET_AMOUNT, 0) + COALESCE(ATF.CREDIT_AMOUNT, 0)
            ELSE 0
        END AS BALANCE_OUT,
        CASE
            WHEN MD.CHAR_TYPE = 'А' 
				THEN (COALESCE(ABF.BALANCE_OUT, 0) + COALESCE(ATF.DEBET_AMOUNT_RUB, 0) - COALESCE(ATF.CREDIT_AMOUNT_RUB, 0))
            WHEN MD.CHAR_TYPE = 'П' 
				THEN (COALESCE(ABF.BALANCE_OUT, 0) - COALESCE(ATF.DEBET_AMOUNT_RUB, 0) + COALESCE(ATF.CREDIT_AMOUNT_RUB, 0))
            ELSE 0
        END AS BALANCE_OUT_RUB
    FROM DS.MD_ACCOUNT_D MD
    LEFT JOIN DM.DM_ACCOUNT_BALANCE_F ABF ON ABF.ON_DATE = PREV_DATE 
		AND ABF.ACCOUNT_RK = MD.ACCOUNT_RK
    LEFT JOIN DM.DM_ACCOUNT_TURNOVER_F ATF ON ATF.ON_DATE = I_ONDATE 
		AND ATF.ACCOUNT_RK = MD.ACCOUNT_RK
    WHERE
        I_ONDATE BETWEEN MD.DATA_ACTUAL_DATE AND MD.DATA_ACTUAL_END_DATE;

	-- ВРЕМЯ КОНЦА ВСТАВКИ
    END_TIME := CLOCK_TIMESTAMP();

	-- ЗАПИСЬ ЛОГА
    INSERT INTO LOGS.ACCOUNT_TURNOVER (DM_NAME,
        OPER_DATE,
        START_TIME,
        END_TIME )
    VALUES ('DM_ACCOUNT_BALANCE_F', i_OnDate, START_TIME, END_TIME);

END;
$$;
